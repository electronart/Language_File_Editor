<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>